CSE 167---(Formerly CSE 177) Representation and manipulation of pictorial data. Two-dimensional and three-dimensional transformations, curves, surfaces. Projection, illumination, and shading models. Raster and vector graphic I/O devices; retained-mode and immediate-mode graphics software systems and applications. Prerequisites: Math 2EA/20F and CSE 100 or Math 176.---preReqModules: 1---shading models---[Ljava.lang.Object;@13d3018e
preReqModules: 2---software systems and applications---[Ljava.lang.Object;@20b1bcd
EOCCSE 229B---Discussion on problems of current research interest in computer networks and communication. Possible areas of focus include: wide-area networking, wireless networks, the Internet, computational grid, operating systems, fault-tolerant computing, storage systems. Topics to be presented by faculty and students under faculty direction. Topics vary from quarter to quarter. May be repeated for credit. Prerequisites: consent of instructor.---EOCCSE 166---Principles of image formation, analysis, and representation. Image enhancement, restoration, and segmentation; stochastic image models. Filter design, sampling, Fourier and wavelet transforms. Selected applications in computer graphics and machine vision. Prerequisites: Math 20F, CSE 100 or Math 176.---preReqModules: 3---image formation---[Ljava.lang.Object;@274e30c7
preReqModules: 4---stochastic image models---[Ljava.lang.Object;@7e646cf9
EOCCSE 229C---Discussion on problems of current research interest in computer security. Topics to be presented by faculty and students under faculty direction. Topics vary from quarter to quarter. May be repeated for credit. Prerequisites: consent of instructor.---EOCCSE 160---Introduction to high performance parallel computing: parallel architecture, algorithms, software, and problem-solving techniques. Areas covered: Flynns’ taxonomy, processor-memory organizations, shared and nonshared memory models: message passing and multithreading, data parallelism; speedup, efficiency and Amdahl’s law, communication and synchronization, isoefficiency and scalability. Assignments given to provide practical experience. Prerequisites: CSE 100 or Math 176.---preReqModules: 5---high performance parallel computing---[Ljava.lang.Object;@732e9042
preReqModules: 6---algorithms---[Ljava.lang.Object;@76011821
preReqModules: 7---software---[Ljava.lang.Object;@41d75b0d
EOCCSE 229A---Discussion on problems of current research interest in computer systems. Possible areas of focus include: distributed computing, computational grid, operating systems, fault-tolerant computing, storage systems, system services for the World Wide Web. Topics to be presented by faculty and students under faculty direction. Topics vary from quarter to quarter. May be repeated for credit. Prerequisites: consent of instructor.---EOCCSE 240B---This course covers advanced topics in parallel computer architecture, including on-chip and off-chip interconnection networks, cache coherence, cache consistency, hardware multithreading, multi-core and tiled architectures. It incorporates the latest research and development on parallel architectures and compilation techniques for those architectures. CSE 240A recommended. Prerequisites: graduate standing.---EOCCSE 240A---(Formerly CSE 240.) This course will cover fundamental concepts in computer architecture. Topics include instruction set architecture, pipelining, pipeline hazards, bypassing, dynamic scheduling, branch prediction, superscalar issue, memory-hierarchy design, advanced cache architectures, and multiprocessor architecture issues. Prerequisites: CSE 141 or consent of instructor.---preReqModules: 8---dynamic scheduling---[Ljava.lang.Object;@219ad440
preReqModules: 9---branch prediction---[Ljava.lang.Object;@3be4c6fc
preReqModules: 10---advanced cache architectures---[Ljava.lang.Object;@28c3e91c
preReqModules: 11---multiprocessor architecture issues---[Ljava.lang.Object;@55fd422c
EOCCSE 7---Fundamentals of computer programming and basic software design covering topics related to variables, functions, and control structures; writing, testing, and debugging programs in Matlab. Examples focus on scientific applications. Recommended preparation: high school algebra and familiarity with the computing milieu. Students with limited computing experience may take CSE 3 for preparation. Students may not take CSE 7 after completing COGS 18. Program or material fee may apply. Prerequistes: none.---EOCCSE 169---Advanced graphics focusing on the programming techniques involved in computer animation. Algorithms and approaches for both character animation and physically based animation. Particular subjects may include skeletons, skinning, key framing, facial animation, inverse kinematics, locomotion, motion capture, video game animation, particle systems, rigid bodies, clothing, and hair. Prerequisites: a good understanding of linear algebra. CSE 167 or consent of instructor.---preReqModules: 12---computer animation---[Ljava.lang.Object;@660382ce
preReqModules: 13---Algorithms and approaches---[Ljava.lang.Object;@7080d6b4
preReqModules: 14---physically based animation---[Ljava.lang.Object;@1a8ffd20
preReqModules: 15---key framing---[Ljava.lang.Object;@63334d7f
preReqModules: 16---facial animation---[Ljava.lang.Object;@3d24ffba
preReqModules: 17---inverse kinematics---[Ljava.lang.Object;@48112bb2
preReqModules: 18---motion capture---[Ljava.lang.Object;@5f4bd814
preReqModules: 19---video game animation---[Ljava.lang.Object;@6c5739ec
EOCCSE 3---Introduces the concepts and skills necessary to effectively use information technology. Includes basic concepts and some practical skills with computer and networks. Prerequisites: none.---EOCCSE 168---Weekly programming assignments that will cover graphics rendering algorithms. During the course the students will learn about ray tracing, geometry, tessellation, acceleration structures, sampling, filtering, shading models, and advanced topics such as global illumination and programmable graphics hardware. Prerequisites: CSE 167 or concurrent enrollment.---preReqModules: 20---ray tracing---[Ljava.lang.Object;@529bec85
preReqModules: 21---acceleration structures---[Ljava.lang.Object;@7ac53a21
preReqModules: 22---global illumination---[Ljava.lang.Object;@2a6b8b7f
preReqModules: 23---concurrent enrollment---[Ljava.lang.Object;@7a93549a
EOCCSE 233---Theory of databases. Theory of query languages, dependency theory, deductive databases, incomplete information, complex objects, object-oriented databases, and more. Connections to logic and complexity theory including finite model theory and descriptive complexity. Prerequisites: CSE 200.---preReqModules: 24---deductive databases---[Ljava.lang.Object;@5e978954
preReqModules: 25---complex objects---[Ljava.lang.Object;@2eb91a50
preReqModules: 26---object-oriented databases---[Ljava.lang.Object;@7a6e9226
preReqModules: 27---logic and complexity theory---[Ljava.lang.Object;@713d3b95
EOCCSE 232---(Formerly CSE 264D.) Database models including relational, hierarchic, and network approaches. Implementation of databases including query languages and system architectures. Prerequisites: CSE 100 or consent of instructor.---preReqModules: 28---relational , hierarchic , and network approaches---[Ljava.lang.Object;@6b12ed47
EOCCSE 231---(Formerly CSE 264C.) Advanced material in programming languages and translator systems. Topics include compilers, code optimization, and debugging interpreters. Prerequisites: CSE 100, 131A–B, or consent of instructor.---preReqModules: 29---programming languages and translator systems---[Ljava.lang.Object;@2798073c
preReqModules: 30---code optimization---[Ljava.lang.Object;@6e030872
EOCCSE 230---(Formerly CSE 273.) Functional versus imperative programming. Type systems and polymorphism; the ML language. Higher order functions, lazy evaluation. Abstract versus concrete syntax, structural and well-founded induction. The lambda calculus, reduction strategies, combinators. Denotational semantics, elementary domain theory. Prerequisites: CSE 130 or equivalent, or consent of instructor.---preReqModules: 31---lazy evaluation---[Ljava.lang.Object;@91faccb
preReqModules: 32---reduction strategies---[Ljava.lang.Object;@7e89481a
preReqModules: 33---Denotational semantics---[Ljava.lang.Object;@66dce3dc
EOCCSE 249A---Topics of special interest in computer architecture to be presented by faculty and students under faculty direction. Topics vary from quarter to quarter. May be repeated for credit. Prerequisites: consent of instructor.---EOCCSE 249C---Topics of special interest in CAD to be presented by faculty and students under faculty direction. Topics vary from quarter to quarter. May be repeated for credit. Prerequisites: consent of instructor.---EOCCSE 249B---Topics of special interest in VLSI to be presented by faculty and students under faculty direction. Topics vary from quarter to quarter. May be repeated for credit. Prerequisites: consent of instructor.---EOCCSE 134B---Design and implementation of interactive World Wide Web clients using helper applications and plug-ins. The main language covered will be Java. Prerequisites: CSE 100 or Math 176. Majors only.---EOCCSE 80---The objective of the course is to help the programmer create a productive UNIX environment. Topics include customizing the shell, file system, shell programming, process management, and UNIX tools. Prerequisites: CSE 8B or CSE 11.---preReqModules: 34---process management---[Ljava.lang.Object;@2ff3b546
EOCCSE 152---The goal of computer vision is to compute scene and object properties from images and video. This introductory course includes feature detection, image segmentation, motion estimation, object recognition, and 3-D shape reconstruction through stereo, photometric stereo, and structure from motion. Prerequisites: Math 20F, CSE 100 or Math 176, CSE 101 or Math 188.---preReqModules: 35---computer vision---[Ljava.lang.Object;@29021f42
preReqModules: 36---feature detection---[Ljava.lang.Object;@4a523b16
preReqModules: 37---image segmentation---[Ljava.lang.Object;@5ca54778
preReqModules: 38---motion estimation---[Ljava.lang.Object;@66f746cc
EOCCSE 86---Helps the Java programmer to be productive in the C++ programming environment. Topics include the similarities and differences between Java and C++ with special attention to pointers, operator overloading, templates, the STL, the preprocessor, and the C++ Runtime Environment. Prerequisites: CSE 12 or consent of instructor.---EOCCSE 87---The Freshman Seminar Program is designed to provide new students with the opportunity to explore an intellectual topic with a faculty member in a small seminar setting. Freshman seminars are offered in all campus departments and undergraduate colleges, and topics vary from quarter to quarter. Enrollment is limited to fifteen to twenty students, with preference given to entering freshmen. Prerequisites: none.---EOCCSE 140L---(Formerly CSE 175B) Implementation with computer-aided design tools for combinational logic minimization and state machine synthesis. Hardware construction of a small digital system. Prerequisites: CSE 20, CSE 30. CSE 140 must be taken concurrently.---preReqModules: 39---a small digital system---[Ljava.lang.Object;@74492fe3
EOCCSE 8A---Introductory computer science course designed for students interested in computing. No prior programming experience is assumed. Learn fundamental concepts of applied computer science using media computation. Must be taken concurrently with CSE 8AL. CSE 8A is part of a three-track course (CSE 8A, CSE 8AL, and CSE 8B) that is equivalent to CSE 11. Students should take CSE 8B to complete this track. Students who have taken CSE 8B or CSE 11 may not take CSE 8A. Recommended preparation: high school algebra and familiarity with computing concepts. Prerequisites: corequisite of CSE 8AL.---EOCCSE 203A---Modern advances in design and analysis of algorithms. Exact syllabus varies. Topics include approximation, randomized algorithms, probabilistic analysis, heuristics, online algorithms, competitive analysis, models of memory hierarchy, parallel algorithms, number-theoretic algorithms, cryptanalysis, computational geometry, computational biology, network algorithms, VLSI CAD algorithms. Prerequisites: CSE 202.---preReqModules: 40---probabilistic analysis---[Ljava.lang.Object;@70e71bb9
preReqModules: 41---memory hierarchy---[Ljava.lang.Object;@54cd4897
EOCCSE 8B---Continuation of the Java language. Continuation of programming techniques. More on inheritance. Exception handling. CSE 8A is part of a three-track course (CSE 8A, CSE 8AL, and CSE 8B) that is equivalent to CSE 11. Students who have taken CSE 11 may not take CSE 8B. Recommended preparation: high school algebra and familiarity with computing concepts or CSE 8A and CSE 8AL.---EOCCSE 15L---Hands-on exploration of software development tools and techniques. Investigation of the scientific process as applied to software development and debugging. Emphasis is on weekly hands-on laboratory experiences, development of laboratory notebooking techniques as applied to software design. Prerequisites: CSE 8B, or CSE 11. Concurrent enrollment with CSE 12.---preReqModules: 42---Concurrent enrollment---[Ljava.lang.Object;@7158dcff
EOCCSE 245---This course is about the computer algorithms, techniques, and theory used in the simulation and verification of electrical circuits. Prerequisites: CSE 241A or consent of instructor.---EOCCSE 248---Algorithmic techniques and optimization frameworks for large-scale, difficult optimizations. Primal-dual multicommodity flow approximations, approximations for geometric and graph Steiner formulations, continuous placement optimization, heuristics for Boolean satisfiability, multilevel methods, semidefinite programming, and application to other formulations (e.g., scheduling). Prerequisites: CSE 241A or CSE 242A, or consent of instructor.---preReqModules: 43---Algorithmic techniques---[Ljava.lang.Object;@115237c
preReqModules: 44---optimization frameworks---[Ljava.lang.Object;@12cca272
EOCCSE 252A---Comprehensive introduction to computer vision providing broad coverage including low-level vision (image formation, photometry, color, image feature detection), inferring 3-D properties from images (shape-from shading, stereo vision, motion interpretation) and object recognition. Companion to CSE 252B covering complementary topics. Prerequisites: Math 10D and Math 20A–F or equivalent.---preReqModules: 45---broad coverage---[Ljava.lang.Object;@38bcf402
preReqModules: 46---low-level vision---[Ljava.lang.Object;@7d37cc67
preReqModules: 47---3-D properties---[Ljava.lang.Object;@5a4cbe6a
preReqModules: 48---stereo vision---[Ljava.lang.Object;@64694f76
preReqModules: 49---motion interpretation---[Ljava.lang.Object;@3ddfff7a
EOCCSE 141---Introduction to computer architecture. Computer system design. Processor design. Control design. Memory systems. Prerequisites: CSE 140, CSE 140L, or consent of the instructor. CSE 141L should be taken concurrently. Majors only.---preReqModules: 50---computer architecture---[Ljava.lang.Object;@3cfdc252
EOCCSE 91---A seminar format discussion led by CSE faculty on topics in central areas of computer science, concentrating on the relation among them, recent developments, and future directions. Prerequisites: majors only.---EOCCSE 140---(Formerly CSE 170A) Design of Boolean logic and finite state machines; two-level, multilevel combinational logic design, combinational modules and modular networks, Mealy and Moore machines, analysis and synthesis of canonical forms, sequential modules. Prerequisites: CSE 20 or Math 15A, and corequisite of CSE 140L.---preReqModules: 51---canonical forms---[Ljava.lang.Object;@37e0b4c6
EOCCSE 252C---Selected topics in computer vision and statistical pattern recognition, with an emphasis on recent developments. Possible topics include: grouping and segmentation, object recognition and tracking, multiple view geometry, kernel-based methods, dimensionality reduction, and mixture models. Prerequisites: CSE 252 or equivalent and CSE 250B or equivalent.---preReqModules: 52---dimensionality reduction---[Ljava.lang.Object;@17c4fd3
EOCCSE 280A---(Formerly CSE 206B.) The course focuses on algorithmic aspects of modern bioinformatics and covers the following topics: computational gene hunting, sequencing, DNA arrays, sequence comparison, pattern discovery in DNA, genome rearrangements, molecular evolution, computational proteomics, and others. Prerequisites: CSE 202 preferred or consent of instructor.---preReqModules: 53---algorithmic aspects---[Ljava.lang.Object;@85ca668
preReqModules: 54---modern bioinformatics---[Ljava.lang.Object;@7ab0fa21
preReqModules: 55---DNA arrays---[Ljava.lang.Object;@78f5cb74
preReqModules: 56---sequence comparison---[Ljava.lang.Object;@51006ab6
preReqModules: 57---pattern discovery---[Ljava.lang.Object;@725dfc45
preReqModules: 58---molecular evolution---[Ljava.lang.Object;@785d50ab
EOCCSE 252B---Comprehensive introduction to computer vision providing focused coverage of multiview geometry, structure from motion, image segmentation, motion segmentation, texture analysis and recognition, object detection, and image-based rendering. Companion to CSE 252A covering complementary topics. Prerequisites: Math 10D and Math 20A–F or equivalent.---preReqModules: 59---motion segmentation---[Ljava.lang.Object;@365b4849
preReqModules: 60---image-based rendering---[Ljava.lang.Object;@22e6cc80
EOCCSE 145---Project class building an embedded computing system. Learn fundamental knowledge of microcontrollers, sensors, and actuators. Introduction to the hardware and software tools to build project in a team environment and end-to-end system building. Prerequisites: CSE 30.---preReqModules: 61---Project class---[Ljava.lang.Object;@5e7bf966
preReqModules: 62---an embedded computing system---[Ljava.lang.Object;@1d32c800
preReqModules: 63---the hardware---[Ljava.lang.Object;@70e886f9
EOCCSE 144---Introduction to computer-aided design. Placement, assignment and floor planning techniques. Routing. Symbolic layout and compaction. Module generation and silicon compilation. Prerequisites: CSE 140 and CSE 140L.---EOCCSE 143---VSLI process technologies; circuit characterization; logic design styles; clocking strategies; computer-aided design tools; subsystem design; design case studies. System design project from hardware description, logic synthesis, physical layout to design verification. Students may not receive credit for both CSE 143 and ECE 161B. Prerequisites: CSE 140 and CSE 141.---preReqModules: 64---circuit characterization---[Ljava.lang.Object;@31f57f58
preReqModules: 65---clocking strategies---[Ljava.lang.Object;@6c7b8407
preReqModules: 66---hardware description---[Ljava.lang.Object;@21191f35
preReqModules: 67---physical layout---[Ljava.lang.Object;@784fe18c
preReqModules: 68---design verification---[Ljava.lang.Object;@4460ec09
EOCCSE 92---This course will improve students’ ability to read and write technical English and write software. Students will write short papers responding to a CSE-related book, learn the basics of functional programming, and do a project using a functional language. Prerequisites: CSE 12.---preReqModules: 69---short papers---[Ljava.lang.Object;@372865f1
preReqModules: 70---the basics---[Ljava.lang.Object;@3d3ccd81
preReqModules: 71---a project---[Ljava.lang.Object;@62d7ef8f
EOCCSE 99---Independent reading or research by special arrangement with a faculty member. Prerequisites: lower-division standing. Completion of thirty units at UC San Diego with a UC San Diego GPA of 3.0. Special Studies form required. Department stamp required. Consent of instructor and approval of the department.---EOCCSE 148---Students will use hardware description language tools to add advanced architectural features to a basic processor design. These features may include pipelining, superscalar execution, branch prediction, and advanced cache features. Designs will be implemented in programmable logic devices. Prerequisites: CSE 141, CSE 141L, or consent of instructor.---preReqModules: 72---hardware description language tools---[Ljava.lang.Object;@4eb0c7fb
preReqModules: 73---superscalar execution---[Ljava.lang.Object;@38195819
preReqModules: 74---advanced cache features---[Ljava.lang.Object;@7e6ee15
preReqModules: 75---programmable logic devices---[Ljava.lang.Object;@4a18a8c0
EOCCSE 146---Fault models and tests, combinational circuit test generation, fault collapsing, fault simulation, synchronous sequential circuit testing, functional testing, memory testing. Prerequisites: CSE 140 and CSE 140L, or consent of instructor.---preReqModules: 76---fault collapsing---[Ljava.lang.Object;@18eefb41
preReqModules: 77---fault simulation---[Ljava.lang.Object;@71b17530
preReqModules: 78---synchronous sequential circuit testing---[Ljava.lang.Object;@3984dca0
preReqModules: 79---functional testing---[Ljava.lang.Object;@41b0a9e0
EOCCSE 242A---Couplings among timing, circuits and spatial embedding in nanometer-scale CMOS design. The role, and key problems, of physical layout in IC implementation. Example topics: RTL-to-GDSII methodologies, analyses and estimations, partitioning, floor planning, placement, routing, special net routing, cell generation, compaction. Prerequisites: CSE 241A or consent of instructor.---preReqModules: 80---key problems---[Ljava.lang.Object;@3560d2d1
preReqModules: 81---floor planning---[Ljava.lang.Object;@67b0b2b7
preReqModules: 82---cell generation---[Ljava.lang.Object;@1a54190
EOCCSE 222A---(Formerly CSE 222.) Computer communication network concepts, protocols, and architectures, with an emphasis on an analysis of algorithms, protocols, and design methodologies. Topics will include layering, error control, flow control, congestion control, switching and routing, quality of service management, mobility, naming, security, and selected contemporary topics. Prerequisites: CSE 123A or consent of instructor.---preReqModules: 83---communication network concepts---[Ljava.lang.Object;@87355c8
preReqModules: 84---error control---[Ljava.lang.Object;@4c04c1cd
preReqModules: 85---flow control---[Ljava.lang.Object;@4c4fa0b8
preReqModules: 86---congestion control---[Ljava.lang.Object;@7fc0b72b
preReqModules: 87---service management---[Ljava.lang.Object;@4539a993
EOCCSE 237B---Embedded computing elements, device interfaces, time-critical IO handling. Embedded software design under size, performance, and reliability constraints. Software timing and functional validation. Programming methods and compilation for embeddable software. Embedded runtime systems. Case studies of real-time software systems. Prerequisites: CSE 237A; or basic courses in programming, algorithms and data structures, elementary calculus, discrete math, computer architecture; or consent of instructor.---preReqModules: 88---device interfaces---[Ljava.lang.Object;@4cac1566
preReqModules: 89---Embedded runtime systems---[Ljava.lang.Object;@35b102dd
preReqModules: 90---real-time software systems---[Ljava.lang.Object;@783316b4
preReqModules: 91---elementary calculus---[Ljava.lang.Object;@6217c112
preReqModules: 92---discrete math---[Ljava.lang.Object;@584b70e
EOCCSE 222B---(Formerly CSE 228H.) Techniques for speeding up Internet implementations, including system restructuring, new algorithms, and hardware innovations. Topics include: models for protocols, systems and hardware; efficiency principles; applying these principles to deriving techniques for efficient implementation of common endnode and router functions. Prerequisites: CSE 123A or CSE 222A, or consent of instructor.---preReqModules: 93---Internet implementations---[Ljava.lang.Object;@4c0dfaf6
preReqModules: 94---protocols , systems and hardware---[Ljava.lang.Object;@29d7537c
preReqModules: 95---efficient implementation---[Ljava.lang.Object;@77aa0759
EOCCSE 237A---Embedded system technologies including processors, DSP, memory, and software. System interfacing basics, communication strategies, sensors, and actuators. Mobile and wireless technology in embedded systems. Using predesigned hardware and software components. Design case studies in wireless, multimedia, and/or networking domains. Prerequisites: basic courses in digital hardware, algorithms and data structures, elementary calculus, and probability; or consent of instructor.---preReqModules: 96---communication strategies---[Ljava.lang.Object;@3bc8a16f
preReqModules: 97---hardware and software components---[Ljava.lang.Object;@70de9d12
preReqModules: 98---data structures---[Ljava.lang.Object;@271a42a2
EOCCSE 211---Survey of testing and analysis methods. Introduction to advanced topics in area as well as traditional production methods. Topics include inspections and reviews, formal analysis, verification and validation standards, nonstatistical testing, statistical-testing and reliability models, coverage methods, testing and analysis tools, and organization management and planning. Methods special to special development approaches such as object-oriented testing will also be described. Prerequisites: undergraduate major in computer science or extensive industrial experience.---EOCCSE 206A---(Formerly CSE 207C) Introduction to the algorithmic theory of point lattices (aka algorithmic geometry of numbers), and some of its most important applications in cryptography and cryptanalysis. Topics usually include: LLL basis reduction algorithm, cryptanalysis of broadcast RSA, hardness of approximating lattice problems. Prerequisites: CSE 202, CSE 200, or concurrent.---preReqModules: 99---point lattices---[Ljava.lang.Object;@2d0cadbc
EOCCSE 210---(Formerly CSE 264A.) General principles in modern software engineering. Both theoretical and practical topics are covered. Theoretical topics include proofs of correctness, programming language semantics, and theory of testing. Practical topics include structured programming, modularization techniques, design of languages for reliable programming, and software tools. Prerequisites: CSE 100, 131A, 120, or consent of instructor.---preReqModules: 100---programming language semantics---[Ljava.lang.Object;@1b6228bf
EOCCSE 232B---A hands-on approach to the principles of databases implementation. Algebraic rewriters/optimizers, query processors, triggers. Beyond centralized relational databases. Prerequisites: CSE 232.---preReqModules: 101---Algebraic rewriters\/optimizers---[Ljava.lang.Object;@496121a4
preReqModules: 102---query processors---[Ljava.lang.Object;@7e7bb9f
EOCCSE 237D---System representation and modeling. Abstract and language models. Simulation as a modeling activity. Computational and hw/sw system prototypes. System analysis using models. Constraint and interface modeling. Behavioral compilation and synthesis. Prerequisites: CSE 237A; or basic courses in digital logic design, algorithms and data structures, elementary calculus, discrete math, symbolic logic, computer architecture; or consent of instructor.---preReqModules: 103---Abstract and language models---[Ljava.lang.Object;@7ecec7c6
preReqModules: 104---Simulation as a modeling activity---[Ljava.lang.Object;@399dd934
preReqModules: 105---Constraint and interface modeling---[Ljava.lang.Object;@2a1f0279
preReqModules: 106---digital logic design , algorithms and data structures---[Ljava.lang.Object;@59db6b89
EOCCSE 12---Use and implementation of basic data structures including linked lists, stacks, and queues. Use of advanced structures such as binary trees and hash tables. Object-oriented design including interfaces, polymorphism, encapsulation, abstract data types, pre-/post-conditions. Recursion. Uses Java and Java Collections. Prerequisites: CSE 8B or CSE 11, and concurrent enrollment with CSE 15L.---preReqModules: 107---binary trees---[Ljava.lang.Object;@54711d75
preReqModules: 108---hash tables---[Ljava.lang.Object;@4e4517a2
EOCCSE 218---This course will cover a current topic in software engineering in depth. Topics in the past have included software tools, impacts of programming language design, and software system structure. (S/U grades permitted.) Prerequisites: none.---EOCCSE 237C---Embedded system building blocks including IP cores. Cosimulation. Formal verification using model checking. Verification environments. Test challenges in core integration: compliance, feature, random, and collision testing. Core access and test integration. Interface-based verification and standards. Prerequisites: CSE 237A; or basic courses in algorithms and data structures, elementary calculus, discrete math, symbolic logic, computer architecture; or consent of instructor.---preReqModules: 109---model checking---[Ljava.lang.Object;@1a12b4d3
preReqModules: 110---core integration---[Ljava.lang.Object;@421d9604
preReqModules: 111---collision testing---[Ljava.lang.Object;@24640285
EOCCSE 130---(Formerly CSE 173.) Introduction to programming languages and paradigms, the components that comprise them, and the principles of language design, all through the analysis and comparison of a variety of languages (e.g., Pascal, Ada, C++, PROLOG, ML.) Will involve programming in most languages studied. Prerequisites: CSE 12, and CSE 100 or Math 176, CSE 105 or Math 166.---preReqModules: 112---programming languages and paradigms---[Ljava.lang.Object;@21e17c6d
preReqModules: 113---the components---[Ljava.lang.Object;@5aafe97b
preReqModules: 114---language design---[Ljava.lang.Object;@5309b8c0
preReqModules: 115---a variety---[Ljava.lang.Object;@23406fd7
preReqModules: 116---programming---[Ljava.lang.Object;@5b6e9e55
EOCCSE 298---Open to properly qualified graduate students who wish to pursue a problem through advanced study under the direction of a member of the staff. (S/U grades only.) Prerequisites: consent of instructor.---EOCCSE 293---The student will conceive, design, and execute a project in computer science under the direction of a faculty member. The project will typically include a large programming or hardware design task, but other types of projects are possible. Prerequisites: CSE graduate student status. (CS 75, 76, 77, 78, 79, 80, 81) (S/U grades only.)---preReqModules: 117---The project---[Ljava.lang.Object;@3b5d0d58
preReqModules: 118---other types---[Ljava.lang.Object;@5a172ada
EOCCSE 292---(Formerly CSE 282.) Computer science and engineering faculty will present one-hour seminars of the current research work in their areas of interest. Prerequisites: CSE graduate status.---EOCCSE 131---(Formerly CSE 131B.) Introduction to the compilation of programming languages, practice of lexical and syntactic analysis, symbol tables, syntax-directed translation, type checking, code generation, optimization, interpretation, and compiler structure. (Students may receive repeat credit for CSE 131A and CSE 131B by completing CSE 131.) Prerequisites: CSE 100 or Math 176, CSE 105 or Math 166, CSE 110, and CSE 130.---preReqModules: 119---the compilation---[Ljava.lang.Object;@26fe7c6b
preReqModules: 120---symbol tables---[Ljava.lang.Object;@d9a68cd
preReqModules: 121---syntax-directed translation---[Ljava.lang.Object;@145671b5
preReqModules: 122---type checking---[Ljava.lang.Object;@37432c81
preReqModules: 123---code generation---[Ljava.lang.Object;@1b1ee57f
EOCCSE 294---Advanced study and analysis of active research in computer science and computer engineering. Discussion of current research and literature in the research specialty of the staff member teaching the course. Prerequisites: consent of instructor.---EOCCSE 136---Design and implementation of large-scale web-based applications. Modeling organizational needs, design and revision management, J2EE or similar software platforms, web and application server functionality, reuse of object-oriented components, model-view-controller and other design patterns, clustering, load-balancing, fault-tolerance, authentication, usage accounting. Prerequisites: CSE 135.---preReqModules: 124---organizational needs---[Ljava.lang.Object;@96d02c2
preReqModules: 125---web and application server functionality---[Ljava.lang.Object;@53d01363
EOCCSE 135---Design and implementation of dynamic web-based applications. Multitier architecture, scripting languages, SQL, XML, session handling, nonbrowser clients, web services, and scalability, security, and usability in the web context. Prerequisites: CSE 100 or Math 176. Majors only.---preReqModules: 126---session handling---[Ljava.lang.Object;@1a8f392
EOCCSE 241A---VLSI integrated-circuit building blocks of computing systems, and their implementation. Computer-aided design and performance simulations, design exercises and projects. Devices, standard cells and interconnects, clocking, power/ground distribution, arithmetic modules, memories. Methodologies and tradeoffs in system implementation. Prerequisites: layout (CSE 165 or ECE 260A) and logic design (CSE 140 or ECE 111), or consent of instructor.---preReqModules: 127---design exercises---[Ljava.lang.Object;@7b0ef717
preReqModules: 128---arithmetic modules---[Ljava.lang.Object;@1380461f
preReqModules: 129---logic design---[Ljava.lang.Object;@4a7ba739
EOCCSE 240C---This course covers advanced topics in computer architecture. It incorporates the latest research and development on topics such as branch prediction, instruction-level parallelism, cache hierarchy design, speculative multithreading, reliable architectures, and power-management techniques. CSE 240A recommended. Prerequisites: graduate standing.---EOCCSE 8AL---Exercises in the theory and practice of computer science under the supervision of an instructor. Hands-on experience with designing, editing, compiling, and executing programming constructs and applications. Must be taken concurrently with CSE 8A. CSE 8AL is part of a three-track course (CSE 8A, CSE 8AL, and CSE 8B) that is equivalent to CSE 11. Students should take CSE 8B to complete this track. Students who have taken CSE 8B or CSE 11 may not take CSE 8AL. Recommended preparation: high school algebra and familiarity with computing concepts. Prerequisites: corequisite of CSE 8A.---EOCCSE 240D---This course covers advanced topics in design concepts and implementation principles of application specific processors, including embedded system design principles and application specific processors, application specific instruction set processors, domain specific processor architectures, embedded memories and dynamically customizable processors. CSE 240A recommended. Prerequisites: graduate standing.---EOCCSE 205A---(Formerly CSE 208D) Mathematical logic as a tool in computer science. Propositional logic, resolution, first-order logic, completeness and incompleteness theorems with computational viewpoint, finite model theory, descriptive complexity, logic programming, nonmonotonic reasoning, temporal logic. Applications to databases, automatic theorem proving, program verification, and distributed systems. Prerequisites: CSE 200 or consent of instructor.---preReqModules: 130---a tool---[Ljava.lang.Object;@7c1fb562
preReqModules: 131---resolution , first-order logic , completeness and incompleteness theorems---[Ljava.lang.Object;@5bd7498
preReqModules: 132---descriptive complexity---[Ljava.lang.Object;@5931aa19
preReqModules: 133---nonmonotonic reasoning---[Ljava.lang.Object;@4b967d0e
preReqModules: 134---program verification---[Ljava.lang.Object;@4ec48e7
EOCCSE 221---Operating system structures, concurrent computation models, scheduling, synchronization mechanisms, address spaces, memory management protection and security, buffering, streams, data-copying reduction techniques, file systems, naming, caching, disk organization, mapped files, remote file systems, case studies of major operating systems. Prerequisites: CSE 120 and 121, or consent of instructor.---preReqModules: 135---Operating system structures---[Ljava.lang.Object;@34a63837
preReqModules: 136---concurrent computation models---[Ljava.lang.Object;@cb4bde2
preReqModules: 137---synchronization mechanisms---[Ljava.lang.Object;@2e1e46f2
preReqModules: 138---address spaces---[Ljava.lang.Object;@45c3d185
preReqModules: 139---memory management protection and security , buffering---[Ljava.lang.Object;@3af0968b
preReqModules: 140---disk organization---[Ljava.lang.Object;@92b9de8
preReqModules: 141---remote file systems---[Ljava.lang.Object;@e8bef0c
preReqModules: 142---major operating systems---[Ljava.lang.Object;@4fb044a
EOCCSE 21---This course will provide an introduction to the discrete mathematical tools needed to analyze algorithms and systems. Enumerative combinatorics: basic counting principles, inclusion-exclusion, and generating functions. Matrix notation. Applied discrete probability. Finite automata. Credit not offered for both Math 15B and CSE 21. Equivalent to Math 15B. Prerequisites: CSE 20 or Math 15A.---preReqModules: 143---the discrete mathematical tools---[Ljava.lang.Object;@7bd698d3
preReqModules: 144---algorithms and systems---[Ljava.lang.Object;@45cb8429
preReqModules: 145---generating functions---[Ljava.lang.Object;@3451c38b
EOCCSE 20---Basic discrete mathematical structure: sets, relations, functions, sequences, equivalence relations, partial orders, and number systems. Methods of reasoning and proofs: propositional logic, predicate logic, induction, recursion, and pigeonhole principle. Infinite sets and diagonalization. Basic counting techniques; permutation and combinations. Applications will be given to digital logic design, elementary number theory, design of programs, and proofs of program correctness. Credit not offered for both Math 15A and CSE 20. Equivalent to Math 15A. Prerequisites: CSE 8A or CSE 8B or CSE 11. CSE 8B or CSE 11 may be taken concurrently with CSE 20/ Math 15A.---preReqModules: 146---discrete mathematical structure---[Ljava.lang.Object;@63fcf582
preReqModules: 147---equivalence relations---[Ljava.lang.Object;@745a5d16
preReqModules: 148---partial orders---[Ljava.lang.Object;@58958b07
preReqModules: 149---logic , predicate logic---[Ljava.lang.Object;@41daa600
preReqModules: 150---Infinite sets---[Ljava.lang.Object;@79c86bc6
preReqModules: 151---digital logic design---[Ljava.lang.Object;@551bd2a0
EOCCSE 226---(Formerly CSE 228B.) Secondary and tertiary storage systems, optical and magnetic media, performance analysis, modeling, reliability, redundant arrays of inexpensive disks, striping, log and maximum distance separable data organizations, sparing. Prerequisites: CSE 221 or consent of instructor.---preReqModules: 152---tertiary storage systems---[Ljava.lang.Object;@15a13207
preReqModules: 153---performance analysis---[Ljava.lang.Object;@9db74a9
preReqModules: 154---redundant arrays---[Ljava.lang.Object;@26c8084d
EOCCSE 227---Security and threat models, risk analysis, authentication and authorization, auditing, operating systems security, access control mechanisms, protection mechanisms, distributed systems/network security, security architecture, electronic commerce security mechanisms, security evaluation. Prerequisites: CSE 221 or consent of instructor.---preReqModules: 155---Security and threat models---[Ljava.lang.Object;@16990b1f
preReqModules: 156---protection mechanisms---[Ljava.lang.Object;@19a92bd0
preReqModules: 157---distributed systems\/network security---[Ljava.lang.Object;@317b71d9
preReqModules: 158---electronic commerce security mechanisms---[Ljava.lang.Object;@1f6f76f0
EOCCSE 250B---Classifier learning including linear separators, decision trees, and nearest neighbors. Generalization and overfitting; design of learning experiments; the PAC model. Possible topics include ensemble methods, boosting, kernel methods, online learning, and reinforcement learning. Prerequisites: graduate standing or consent of instructor.---preReqModules: 159---linear separators---[Ljava.lang.Object;@4ee996af
preReqModules: 160---decision trees---[Ljava.lang.Object;@49a3e3a2
EOCCSE 127---Topics include basic cryptography, security/threat analysis, access control, auditing, security models, distributed systems security, and theory behind common attack and defense techniques. The class will go over formal models as well as the bits and bytes of security exploits. Prerequisites: CSE 21 or Math 15B, and CSE 120.---preReqModules: 161---basic cryptography---[Ljava.lang.Object;@26b5c673
preReqModules: 162---access control---[Ljava.lang.Object;@67f7bbdf
preReqModules: 163---distributed systems security---[Ljava.lang.Object;@394f62cc
preReqModules: 164---formal models---[Ljava.lang.Object;@adf5c79
EOCCSE 244A---Design for test, testing economics, defects, failures and faults, fault models, fault simulation, automatic test pattern generation, functional testing, memory, PLA, FPGA, microprocessor test, and fault diagnosis. Prerequisites: CSE 241A or consent of instructor.---preReqModules: 165---fault models---[Ljava.lang.Object;@4e301182
preReqModules: 166---microprocessor test---[Ljava.lang.Object;@35cd95e8
EOCCSE 124---(Renumbered from CSE 123B.) The architecture of modern networked services, including data center design, enterprise storage, fault tolerance, and load balancing. Protocol software structuring, the Transmission Control Protocol (TCP), remote procedure calls, protocols for digital audio and video communication, overlay and peer-to-peer systems, secure communication. Credit may not be received for both CSE 124 and ECE 158B. Students may not receive credit for both CSE 123B and CSE 124. Prerequisites: CSE 120 or consent of instructor. Majors only.---preReqModules: 167---The architecture---[Ljava.lang.Object;@4c2ccdf0
preReqModules: 168---enterprise storage---[Ljava.lang.Object;@11846ea2
preReqModules: 169---fault tolerance---[Ljava.lang.Object;@d7b56aa
preReqModules: 170---load balancing---[Ljava.lang.Object;@1c76b9d0
preReqModules: 171---digital audio and video communication , overlay and peer-to-peer systems---[Ljava.lang.Object;@36a11549
EOCCSE 258A---Connectionist models and a sampling of other cognitive modeling techniques. Models of language processing, memory, sequential processes, and vision. Areas covered may vary depending on student and faculty interests. Can be repeated for credit. CSE 151 or CSE 250B or CSE 253 or CSE 254, or equivalent experience recommended. Prerequisites: graduate standing.---EOCCSE 125---Design and implementation of large, complex software systems involving multiple aspects of CSE curriculum. Emphasis is on software system design applied to a single, large group project with close interaction with instructor. Prerequisites: senior standing with substantial programming experience, and consent of instructor. Department stamp required.---EOCCSE 123---(Renumbered from CSE 123A.) Introduction to concepts, principles, and practice of computer communication networks with examples from existing architectures, protocols, and standards with special emphasis on the Internet protocols. Layering and the OSI model; physical and data link layers; local and wide area networks; datagrams and virtual circuits; routing and congestion control; internetworking. Transport protocols. Credit may not be received for both CSE 123A and 158A, or CSE 123B and 158B. Prerequisites: CSE 120 or consent of instructor. Majors only.---preReqModules: 172---computer communication networks---[Ljava.lang.Object;@97c87a4
preReqModules: 173---existing architectures---[Ljava.lang.Object;@4ead24d9
preReqModules: 174---local and wide area networks---[Ljava.lang.Object;@494e4ae9
preReqModules: 175---virtual circuits---[Ljava.lang.Object;@33182c98
EOCCSE 120---Basic functions of operating systems; basic kernel structure, concurrency, memory management, virtual memory, file systems, process scheduling, security and protection. Prerequisites: CSE 30, and CSE 101 or Math 188, and CSE 70 or CSE 110.---preReqModules: 176---memory management---[Ljava.lang.Object;@7817c95c
preReqModules: 177---virtual memory---[Ljava.lang.Object;@61a4f49c
preReqModules: 178---process scheduling---[Ljava.lang.Object;@14b75fd9
EOCCSE 121---(Formerly CSE 171B.) Case study of architecture and implementation of a selected modern operating system. In-depth analysis through a detailed study of source code. Topics include process creation, context-switching, memory allocation, synchronization mechanisms, interprocess communication, I/O buffering, device drivers, and file systems. Prerequisites: CSE 120.---preReqModules: 179---process creation---[Ljava.lang.Object;@12f5aa2f
preReqModules: 180---memory allocation---[Ljava.lang.Object;@3e77fd62
preReqModules: 181---interprocess communication---[Ljava.lang.Object;@379c4cf8
preReqModules: 182---device drivers---[Ljava.lang.Object;@76814a4d
EOCCSE 208D---CSE 209A. Topics/Seminar in Algorithms, Complexity, and Logic (1–4)---EOCCSE 30---Introduction to organization of modern digital computers—understanding the various components of a computer and their interrelationships. Study of a specific architecture/machine with emphasis on systems programming in C and Assembly languages in a UNIX environment. Prerequisites: CSE 12, CSE 15L, or consent of instructor.---EOCCSE 195---Teaching and tutorial assistance in a CSE course under the supervision of the instructor. (P/NP grades only.) Prerequisites: consent of the department chair. Department stamp required.---EOCCSE 274---Selected topics in computer graphics, with an emphasis on recent developments. Possible topics include computer animation, shape modeling and analysis, image synthesis, appearance modeling, and real-time rendering. CSE 168 or CSE 169 recommended. Prerequisites: graduate standing or consent of instructor.---EOCCSE 272---Computer graphics techniques for creating realistic images. Topics include ray tracing, global illumination, subsurface scattering, and participating media. CSE 168 or equivalent recommended.---EOCCSE 239A---Discussion on problems of current research interest in databases. Possible areas of focus include: core database issues, data management on the web, data integration, new database models and applications, formal methods in databases. Topics to be presented by faculty and students under faculty direction. Topics vary from quarter to quarter. May be repeated for credit. Prerequisites: consent of instructor.---EOCCSE 199---Independent reading or research by special arrangement with a faculty member. (P/NP grades only.) Prerequisites: consent of the instructor. Department stamp required.---EOCCSE 250A---Heuristic search algorithms including A*, constraint satisfaction algorithms including DPLL, randomized search, knowledge representation in first-order logic (FOL), resolution methods for reasoning in FOL, reasoning about action and planning, reasoning with Bayesian networks. CSE 101 recommended. Prerequisites: graduate standing in CSE or consent of instructor.---EOCCSE 6GS---Companion course to CSE 4GS where theory is applied and lab experiments are carried out “in the field” in Rome, Italy. For final projects, students will select a complex structure (e.g., the Colosseum, the Pantheon, St. Peter’s, etc.) to analyze and model, in detail, using computer-based tools. Prerequisites: Math 10A or Math 20B; departmental approval, and corequisite of CSE 4GS.---preReqModules: 183---the field---[Ljava.lang.Object;@22354203
preReqModules: 184---final projects---[Ljava.lang.Object;@5680e480
preReqModules: 185---computer-based tools---[Ljava.lang.Object;@2819bbde
preReqModules: 186---departmental approval---[Ljava.lang.Object;@317d0063
EOCCSE 198---Computer science and engineering topics whose study involves reading and discussion by a small group of students under the supervision of a faculty member. (P/NP grades only.) Prerequisites: consent of the instructor. Department stamp required.---EOCCSE 207---Private and public key cryptography, introduction to reduction based proofs of security, concrete security, block ciphers, pseudorandom functions and generators, symmetric encryption, asymmetric encryption, computational number theory, RSA and discrete log systems, message authentication, digital signatures, key distribution and key management. Prerequisites: CSE 202 or consent of instructor.---preReqModules: 187---introduction---[Ljava.lang.Object;@5a47cf7
preReqModules: 188---block ciphers---[Ljava.lang.Object;@72083f05
preReqModules: 189---computational number theory , RSA and discrete log systems---[Ljava.lang.Object;@7b619bbf
preReqModules: 190---message authentication---[Ljava.lang.Object;@453857e1
preReqModules: 191---digital signatures---[Ljava.lang.Object;@76119847
preReqModules: 192---key distribution---[Ljava.lang.Object;@7d2499df
preReqModules: 193---key management---[Ljava.lang.Object;@6df23fa8
EOCCSE 118---Explores emerging opportunities enabled by cheap sensors and networked computing devices. Small research projects will be conducted in teams, culminating in project presentations at the end of the term. Section will cover material relevant to the project, such as research methods, software engineering, teamwork, and project management. Prerequisites: any course from the following: CSE 131, CSE 132B, Cog Sci 102C, Cog Sci 121, Cog Sci 184, ECE 111, ECE 118, ECE 191, ECE 192, COMM 102C, or ICAM; or consent of instructor.---preReqModules: 194---networked computing devices---[Ljava.lang.Object;@3b3166fc
preReqModules: 195---project presentations---[Ljava.lang.Object;@286048c0
preReqModules: 196---the end---[Ljava.lang.Object;@494849f5
preReqModules: 197---the project---[Ljava.lang.Object;@28ef9969
preReqModules: 198---project management---[Ljava.lang.Object;@a40d17e
preReqModules: 199---the following---[Ljava.lang.Object;@2579ac74
EOCCSE 208---Zero-knowledge, secure computation, session-key distribution, protocols, electronic payment, one-way functions, trapdoor permutations, pseudorandom bit generators, hardcore bits. Prerequisites: CSE 202, CSE 200, and CSE 207 or consent of instructor.---preReqModules: 200---electronic payment---[Ljava.lang.Object;@572906e4
preReqModules: 201---one-way functions---[Ljava.lang.Object;@46838f70
EOCCSE 291---(Formerly CSE 281A). Topics of interest in computer science and engineering. Topics may vary from quarter to quarter. May be repeated for credit with the consent of instructor. (S/U grades permitted.) Prerequisites: consent of instructor. (Offered as faculty resources permit.)---EOCCSE 290---(Formerly CSE 280A.) A seminar course in which topics of special interest in computer science and engineering will be presented by staff members and graduate students under faculty direction. Topics vary from quarter to quarter. May be repeated for credit. (S/U grades only.) Prerequisites: consent of instructor. (Offered as faculty resources permit.)---EOCCSE 113---Errors, resulting in defects and ultimately system failure, occur in engineering and also other areas such as medical care. The ways in which failures occur, and the means for their prevention, mitigation, and management will be studied. Emphasis will be on software systems but also include the study of practice of other areas. Prerequistes: CSE 12 and CSE 21.---EOCCSE 243A---Hardware software co-design, architectural level synthesis, control synthesis and optimization, scheduling, binding, register and bus sharing, interconnect design, module selection, combinational logic optimization, state minimization, state encoding, and retiming. Prerequisites: CSE 241A or consent of instructor.---preReqModules: 202---Hardware software co-design---[Ljava.lang.Object;@673e263a
preReqModules: 203---control synthesis and optimization---[Ljava.lang.Object;@213fdeca
preReqModules: 204---combinational logic optimization---[Ljava.lang.Object;@683bb0d3
preReqModules: 205---state minimization---[Ljava.lang.Object;@26d6221b
preReqModules: 206---state encoding---[Ljava.lang.Object;@34592e88
EOCCSE 202---The basic techniques for the design and analysis of algorithms. Divide-and-conquer, dynamic programming, data structures, graph search, algebraic problems, randomized algorithms, lower bounds, probabilistic analysis, parallel algorithms. Prerequisites: CSE 101 or equivalent.---preReqModules: 207---algebraic problems---[Ljava.lang.Object;@4afdfd91
EOCCSE 259C---Topics of special interest in machine learning to be presented by faculty and students under faculty direction. Topics vary from quarter to quarter. May be repeated for credit. Prerequisites: consent of instructor.---EOCCSE 110---Introduction to software development and engineering methods, including specification, design, implementation, testing, and process. An emphasis on team development, agile methods, and use of tools such as IDE’s, version control, and test harnesses. CSE 70 is renumbered to CSE 110: students may not receive credit for both CSE 70 and CSE 110. Prerequisites: CSE 12, CSE 21, or Math 15B.---preReqModules: 208---team development---[Ljava.lang.Object;@6912610d
preReqModules: 209---version control---[Ljava.lang.Object;@35a1d25f
EOCCSE 200---Computability review, including halting problem, decidable sets, r.e. sets, many-one reductions; TIME(t(n)), SPACE(s(n)) and general relations between these classes; L, P, PSPACE, NP; NP—completeness; hierarchy theorems; RP, BPP. Prerequisites: CSE 105 or equivalent.---preReqModules: 210---decidable sets---[Ljava.lang.Object;@12fa767b
preReqModules: 211---r.e. sets---[Ljava.lang.Object;@79788ef8
preReqModules: 212---general relations---[Ljava.lang.Object;@59f27a15
preReqModules: 213---these classes---[Ljava.lang.Object;@3e2d26d5
preReqModules: 214---hierarchy theorems---[Ljava.lang.Object;@65089d7
EOCCSE 111---Introduction to object-oriented analysis and design. Object-oriented modeling methods for analysis and design, object-oriented general design paradigms, object-oriented design techniques. Cyclic development of object-oriented systems. Prerequisites: CSE 70 or CSE 110.---preReqModules: 215---Object-oriented modeling methods---[Ljava.lang.Object;@1189857e
preReqModules: 216---Cyclic development---[Ljava.lang.Object;@5b9b1c30
EOCCSE 112---This course will cover software engineering topics associated with large systems development such as requirements and specifications, testing and maintenance, and design. Specific attention will be given to development tools and automated support environments. Prerequisites: CSE 111.---preReqModules: 217---large systems development---[Ljava.lang.Object;@2457c24c
preReqModules: 218---Specific attention---[Ljava.lang.Object;@7d951e37
EOCCSE 500---A course in which teaching assistants are aided in learning proper teaching methods by means of supervision of their work by the faculty: handling of discussions, preparation and grading of examinations and other written exercises, and student relations. May be used to meet teaching experience requirement for candidates for the PhD degree. Number of units for credit depends on number of hours devoted to class or section assistance. Prerequisites: graduate standing and consent of instructor.---EOCCSE 4GS---Exploration of topics in mathematics and engineering as they relate to classical architecture in Rome, Italy. In depth geometrical analysis and computer modeling of basic structures (arches, vaults, domes), and on-site studies of the Colosseum, Pantheon, Roman Forum, and St. Peter’s Basilica. Prerequisites: Math 10A or Math 20A; departmental approval, and corequisite of CSE 6GS.---preReqModules: 219---basic structures---[Ljava.lang.Object;@48f2ed4a
EOCCSE 283---Annotating genomes, characterizing functional genes, profiling, reconstructing pathways. Prerequisites: Pharm 201, BENG 202/CSE 282, or consent of instructor.---preReqModules: 220---functional genes---[Ljava.lang.Object;@44b8bab0
EOCCSE 181---This course covers the analysis of nucleic acid and protein sequences, with an emphasis on the application of algorithms to biological problems. Topics include sequence alignments, database searching, comparative genomics, and phylogenetic and clustering analyses. Pairwise alignment, multiple alignment, DNS sequencing, scoring functions, fast database search, comparative genomics, clustering, phylogenetic trees, gene finding/DNA statistics. Prerequisites: CSE 100 or Math 176, CSE 101 or Math 188, BIMM 100 or Chem 114D. Bioinformatics majors only. CSE 181 is cross-listed with BIMM 181 and BENG 181.---preReqModules: 221---the application---[Ljava.lang.Object;@3be89c0f
preReqModules: 222---biological problems---[Ljava.lang.Object;@245dbb83
preReqModules: 223---comparative genomics---[Ljava.lang.Object;@5c1a81c
preReqModules: 224---multiple alignment---[Ljava.lang.Object;@6d03c937
preReqModules: 225---scoring functions---[Ljava.lang.Object;@138f71cb
preReqModules: 226---fast database search---[Ljava.lang.Object;@2e77d075
preReqModules: 227---phylogenetic trees---[Ljava.lang.Object;@3c16c928
preReqModules: 228---majors only---[Ljava.lang.Object;@7bf07fe9
EOCCSE 223A---(Formerly CSE 223.) Logical and physical time, snapshot protocols, failure models, replication strategies, consensus and reliable broadcast, self-stabilization, atomic commit. Prerequisites: CSE 221 or consent of instructor.---preReqModules: 229---snapshot protocols---[Ljava.lang.Object;@6a5dd990
preReqModules: 230---failure models---[Ljava.lang.Object;@3776b37e
preReqModules: 231---replication strategies---[Ljava.lang.Object;@520231a4
EOCCSE 105---An introduction to the mathematical theory of computability. Formal languages. Finite automata and regular expression. Push-down automata and context-free languages. Computable or recursive functions: Turing machines, the halting problem. Undecidability. Credit not offered for both Math 166 and CSE 105. Equivalent to Math 166. Prerequisites: CSE 12, CSE 21 or Math 15B, or Math 100A, or Math 103A.---preReqModules: 232---Turing machines---[Ljava.lang.Object;@e09300c
EOCCSE 103---Distributions over the real line. Independence, expectation, conditional expectation, mean, variance. Hypothesis testing. Learning classifiers. Distributions over R^n, covariance matrix. Binomial, Poisson distributions. Chernoff bound. Entropy. Compression. Arithmetic coding. Maximal likelihood estimation. Bayesian estimation. CSE 103 is not duplicate credit for ECE 109, Econ 120A, or Math 183. Prerequisites: Math 20A and Math 20B.---preReqModules: 233---covariance matrix---[Ljava.lang.Object;@7d316b06
preReqModules: 234---Arithmetic coding---[Ljava.lang.Object;@37699720
preReqModules: 235---Bayesian estimation---[Ljava.lang.Object;@7540d24b
EOCCSE 223B---Efficient primitives for distributed operating systems and high-performance network servers, including concurrent and event-driven server architectures, remote procedure calls, and load shedding. Distributed naming, directory, and storage services, replication for fault tolerance, and security in distributed systems. Prerequisites: CSE 221, CSE 222A, or consent of instructor.---preReqModules: 236---Efficient primitives---[Ljava.lang.Object;@72ae7610
preReqModules: 237---distributed operating systems---[Ljava.lang.Object;@1bc94f42
EOCCSE 599---Training in teaching methods in the field of computer science. This course examines theoretical and practical communication and teaching techniques particularly appropriate to computer science. Prerequisites: consent of faculty.---EOCCSE 107---Topics include private and public-key cryptography, block ciphers, data encryption, authentication, key distribution and certification, pseudorandom number generators, design and analysis of protocols, zero-knowledge proofs, and advanced protocols. Emphasizes rigorous mathematical approach including formal definitions of security goals and proofs of protocol security. Prerequisites: CSE 21 or Math 15B, CSE 101 or Math 188, CSE 105 or Math 166.---EOCCSE 100---High-performance data structures and supporting algorithms. Use and implementation of data structures like (un)balanced trees, graphs, priority queues, and hash tables. Also memory management, pointers, recursion. Theoretical and practical performance analysis, both average case and amortized. Uses C++ and STL. Credit not offered for both Math 176 and CSE 100. Equivalent to Math 176. Prerequisites: CSE 12, CSE 21 or Math 15B, or consent of instructor.---preReqModules: 238---priority queues---[Ljava.lang.Object;@3d72844e
EOCCSE 101---Design and analysis of efficient algorithms with emphasis of nonnumerical algorithms such as sorting, searching, pattern matching, and graph and network algorithms. Measuring complexity of algorithms, time and storage. NP-complete problems. Credit not offered for both Math 188 and CSE 101. Equivalent to Math 188. Prerequisites: CSE 12, CSE 21 or Math 15B, or Math 100A, or Math 103A and CSE 100, or Math 176. Majors only.---preReqModules: 239---pattern matching---[Ljava.lang.Object;@294c3c66
preReqModules: 240---graph and network algorithms---[Ljava.lang.Object;@4c1161b8
preReqModules: 241---Measuring complexity---[Ljava.lang.Object;@9269e0c
preReqModules: 242---algorithms , time and storage---[Ljava.lang.Object;@46522a85
EOCCSE 141L---Hands-on computer architecture project aiming to familiarize students with instruction set architecture, and design of process. Control and memory systems. Prerequisites: CSE 140, CSE 140L, or consent of the instructor. CSE 141 should be taken concurrently. Majors only.---preReqModules: 243---Hands-on computer architecture project---[Ljava.lang.Object;@3c65a5d4
preReqModules: 244---Control and memory systems---[Ljava.lang.Object;@356a2046
EOCCSE 5A---(Formerly CSE 62A) Introduction to algorithms and top-down problem solving. Introduction to the C language, including functions, arrays, and standard libraries. Basic skills for using a PC graphical user interface operating system environment. File maintenance utilities are covered. (A student may not receive credit for CSE 5A after receiving credit for CSE 10 or CSE 11 or CSE 8B or CSE 9B or CSE 62B or CSE 65.) Prerequisites: A familiarity with high-school level algebra is expected, but this course assumes no prior programming knowledge.---EOCCSE 259---A weekly meeting featuring local (and occasional external) speakers discussing their current research in Artificial Intelligence Neural Networks, and Genetic Algorithms. (S/U grades only.) Prerequisites: none.---EOCCSE 256---Introduction to modern statistical approaches to natural language processing: part-of-speech tagging, word-sense disambiguation and parsing, using Markov models, hidden Markov models and probabilistic context-free grammars. Recommended: one of LIGN 165, LIGN 245, CSE 151, CSE 250A, CSE 254. Prerequisites: graduate standing or consent of instructor.---EOCCSE 257---Computational methods are indispensable to an understanding of the vast datasets emerging from human and other organisms’ genomes. This course surveys algorithms underlying genome analysis, sequence alignment, phylogenetic trees, protein folding, gene expression, metabolic pathways, and biological knowledge base design. Prerequisites: Pharm 201 or consent of instructor.---preReqModules: 245---sequence alignment---[Ljava.lang.Object;@4a6cef0f
preReqModules: 246---protein folding---[Ljava.lang.Object;@35c2e7f5
preReqModules: 247---gene expression---[Ljava.lang.Object;@f0aa166
EOCCSE 132A---Basic concepts of databases, including data modeling, relational databases, query languages, optimization, dependencies, schema design, and concurrency control. Exposure to one or several commercial database systems. Advanced topics such as deductive and object-oriented databases, time allowing. Prerequisites: CSE 100 or Math 176.---preReqModules: 248---data modeling---[Ljava.lang.Object;@2ea3741
preReqModules: 249---relational databases---[Ljava.lang.Object;@5ed18de5
preReqModules: 250---concurrency control---[Ljava.lang.Object;@fbae605
preReqModules: 251---several commercial database systems---[Ljava.lang.Object;@37535a54
EOCCSE 132B---Design of databases, transactions, use of trigger facilities and datablades. Performance measuring, organization of index structures. Prerequisites: CSE 132A or equivalent.---preReqModules: 252---index structures---[Ljava.lang.Object;@414f5d2c
EOCCSE 254---Learning algorithms based on statistics. Possible topics include minimum-variance unbiased estimators, maximum likelihood estimation, likelihood ratio tests, resampling methods, linear logistic regression, feature selection, regularization, dimensionality reduction, manifold detection. An upper-division undergraduate course on probability and statistics such as Math 183 or 186, or any graduate course on statistics, pattern recognition, or machine learning is recommended. Prerequisites: graduate standing.---EOCCSE 190---Topics of special interest in computer science and engineering. Topics may vary from quarter to quarter. May be repeated for credit with the consent of instructor. Prerequisites: consent of instructor. Department stamp required.---EOCCSE 191---A seminar course on topics of current interest. Students, as well as, the instructor will be actively involved in running the course/class. This course cannot be counted toward a technical elective. Prerequisites: consent of instructor. Department stamp required.---preReqModules: 253---current interest---[Ljava.lang.Object;@416e1533
EOCCSE 209A---Topics of special interest in algorithms, complexity, and logic to be presented by faculty and students under faculty direction. Topics vary from quarter to quarter. May be repeated for credit. Prerequisites: consent of instructor.---EOCCSE 209B---Topics of special interest in cryptography to be presented by fac